[{"name":"abstract fun add(editedMediaItem: EditedMediaItem, isLooping: Boolean = false): CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder.add","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/add.html","searchKeys":["add","abstract fun add(editedMediaItem: EditedMediaItem, isLooping: Boolean = false): CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder.add"]},{"name":"abstract fun add(sequence: EditedMediaItemSequence): CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder.add","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/add.html","searchKeys":["add","abstract fun add(sequence: EditedMediaItemSequence): CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder.add"]},{"name":"abstract fun audio(processor: AudioProcessor): EffectsBuilder","description":"dev.transformerkt.dsl.effects.EffectsBuilder.audio","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/audio.html","searchKeys":["audio","abstract fun audio(processor: AudioProcessor): EffectsBuilder","dev.transformerkt.dsl.effects.EffectsBuilder.audio"]},{"name":"abstract fun audio(processors: List<AudioProcessor>): EffectsBuilder","description":"dev.transformerkt.dsl.effects.EffectsBuilder.audio","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/audio.html","searchKeys":["audio","abstract fun audio(processors: List<AudioProcessor>): EffectsBuilder","dev.transformerkt.dsl.effects.EffectsBuilder.audio"]},{"name":"abstract fun build(): Composition","description":"dev.transformerkt.dsl.composition.CompositionBuilder.build","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/build.html","searchKeys":["build","abstract fun build(): Composition","dev.transformerkt.dsl.composition.CompositionBuilder.build"]},{"name":"abstract fun build(): Effects","description":"dev.transformerkt.dsl.effects.EffectsBuilder.build","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/build.html","searchKeys":["build","abstract fun build(): Effects","dev.transformerkt.dsl.effects.EffectsBuilder.build"]},{"name":"abstract fun effects(block: EffectsBuilder.() -> Unit): CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder.effects","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/effects.html","searchKeys":["effects","abstract fun effects(block: EffectsBuilder.() -> Unit): CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder.effects"]},{"name":"abstract fun sequenceOf(isLooping: Boolean = false, block: SequenceBuilder.() -> Unit): CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder.sequenceOf","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/sequence-of.html","searchKeys":["sequenceOf","abstract fun sequenceOf(isLooping: Boolean = false, block: SequenceBuilder.() -> Unit): CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder.sequenceOf"]},{"name":"abstract fun video(effect: Effect): EffectsBuilder","description":"dev.transformerkt.dsl.effects.EffectsBuilder.video","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/video.html","searchKeys":["video","abstract fun video(effect: Effect): EffectsBuilder","dev.transformerkt.dsl.effects.EffectsBuilder.video"]},{"name":"abstract fun video(effects: List<Effect>): EffectsBuilder","description":"dev.transformerkt.dsl.effects.EffectsBuilder.video","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/video.html","searchKeys":["video","abstract fun video(effects: List<Effect>): EffectsBuilder","dev.transformerkt.dsl.effects.EffectsBuilder.video"]},{"name":"abstract var forceAudioTrack: Boolean","description":"dev.transformerkt.dsl.composition.CompositionBuilder.forceAudioTrack","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/force-audio-track.html","searchKeys":["forceAudioTrack","abstract var forceAudioTrack: Boolean","dev.transformerkt.dsl.composition.CompositionBuilder.forceAudioTrack"]},{"name":"abstract var hdrMode: Int","description":"dev.transformerkt.dsl.composition.CompositionBuilder.hdrMode","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/hdr-mode.html","searchKeys":["hdrMode","abstract var hdrMode: Int","dev.transformerkt.dsl.composition.CompositionBuilder.hdrMode"]},{"name":"abstract var transmuxAudio: Boolean","description":"dev.transformerkt.dsl.composition.CompositionBuilder.transmuxAudio","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/transmux-audio.html","searchKeys":["transmuxAudio","abstract var transmuxAudio: Boolean","dev.transformerkt.dsl.composition.CompositionBuilder.transmuxAudio"]},{"name":"abstract var transmuxVideo: Boolean","description":"dev.transformerkt.dsl.composition.CompositionBuilder.transmuxVideo","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/transmux-video.html","searchKeys":["transmuxVideo","abstract var transmuxVideo: Boolean","dev.transformerkt.dsl.composition.CompositionBuilder.transmuxVideo"]},{"name":"abstract var videoCompositorSettings: VideoCompositorSettings","description":"dev.transformerkt.dsl.composition.CompositionBuilder.videoCompositorSettings","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/video-compositor-settings.html","searchKeys":["videoCompositorSettings","abstract var videoCompositorSettings: VideoCompositorSettings","dev.transformerkt.dsl.composition.CompositionBuilder.videoCompositorSettings"]},{"name":"class Failure(val cause: Throwable) : TransformerStatus, TransformerStatus.Finished","description":"dev.transformerkt.TransformerStatus.Failure","location":"transformerkt/dev.transformerkt/-transformer-status/-failure/index.html","searchKeys":["Failure","class Failure(val cause: Throwable) : TransformerStatus, TransformerStatus.Finished","dev.transformerkt.TransformerStatus.Failure"]},{"name":"class Progress(val progress: Int) : TransformerStatus","description":"dev.transformerkt.TransformerStatus.Progress","location":"transformerkt/dev.transformerkt/-transformer-status/-progress/index.html","searchKeys":["Progress","class Progress(val progress: Int) : TransformerStatus","dev.transformerkt.TransformerStatus.Progress"]},{"name":"class SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/index.html","searchKeys":["SequenceBuilder","class SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder"]},{"name":"class Success(val output: File, val exportResult: ExportResult) : TransformerStatus, TransformerStatus.Finished","description":"dev.transformerkt.TransformerStatus.Success","location":"transformerkt/dev.transformerkt/-transformer-status/-success/index.html","searchKeys":["Success","class Success(val output: File, val exportResult: ExportResult) : TransformerStatus, TransformerStatus.Finished","dev.transformerkt.TransformerStatus.Success"]},{"name":"constructor()","description":"dev.transformerkt.dsl.composition.SequenceBuilder.SequenceBuilder","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/-sequence-builder.html","searchKeys":["SequenceBuilder","constructor()","dev.transformerkt.dsl.composition.SequenceBuilder.SequenceBuilder"]},{"name":"constructor(cause: Throwable)","description":"dev.transformerkt.TransformerStatus.Failure.Failure","location":"transformerkt/dev.transformerkt/-transformer-status/-failure/-failure.html","searchKeys":["Failure","constructor(cause: Throwable)","dev.transformerkt.TransformerStatus.Failure.Failure"]},{"name":"constructor(output: File, exportResult: ExportResult)","description":"dev.transformerkt.TransformerStatus.Success.Success","location":"transformerkt/dev.transformerkt/-transformer-status/-success/-success.html","searchKeys":["Success","constructor(output: File, exportResult: ExportResult)","dev.transformerkt.TransformerStatus.Success.Success"]},{"name":"constructor(progress: Int)","description":"dev.transformerkt.TransformerStatus.Progress.Progress","location":"transformerkt/dev.transformerkt/-transformer-status/-progress/-progress.html","searchKeys":["Progress","constructor(progress: Int)","dev.transformerkt.TransformerStatus.Progress.Progress"]},{"name":"data object Fill : LayoutScale","description":"dev.transformerkt.ktx.effects.LayoutScale.Fill","location":"transformerkt/dev.transformerkt.ktx.effects/-layout-scale/-fill/index.html","searchKeys":["Fill","data object Fill : LayoutScale","dev.transformerkt.ktx.effects.LayoutScale.Fill"]},{"name":"data object Fit : LayoutScale","description":"dev.transformerkt.ktx.effects.LayoutScale.Fit","location":"transformerkt/dev.transformerkt.ktx.effects/-layout-scale/-fit/index.html","searchKeys":["Fit","data object Fit : LayoutScale","dev.transformerkt.ktx.effects.LayoutScale.Fit"]},{"name":"data object Stretch : LayoutScale","description":"dev.transformerkt.ktx.effects.LayoutScale.Stretch","location":"transformerkt/dev.transformerkt.ktx.effects/-layout-scale/-stretch/index.html","searchKeys":["Stretch","data object Stretch : LayoutScale","dev.transformerkt.ktx.effects.LayoutScale.Stretch"]},{"name":"fun <T> items(items: List<T>, selector: (T) -> Uri, configure: MediaItem.Builder.(T) -> Unit = {}, block: EditedMediaItem.Builder.(T) -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.items","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/items.html","searchKeys":["items","fun <T> items(items: List<T>, selector: (T) -> Uri, configure: MediaItem.Builder.(T) -> Unit = {}, block: EditedMediaItem.Builder.(T) -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.items"]},{"name":"fun Composition.Builder.setEffects(block: EffectsBuilder.() -> Unit): Composition.Builder","description":"dev.transformerkt.dsl.effects.setEffects","location":"transformerkt/dev.transformerkt.dsl.effects/set-effects.html","searchKeys":["setEffects","fun Composition.Builder.setEffects(block: EffectsBuilder.() -> Unit): Composition.Builder","dev.transformerkt.dsl.effects.setEffects"]},{"name":"fun EditedMediaItem.Builder.effects(block: EffectsBuilder.() -> Unit): EditedMediaItem.Builder","description":"dev.transformerkt.dsl.effects.effects","location":"transformerkt/dev.transformerkt.dsl.effects/effects.html","searchKeys":["effects","fun EditedMediaItem.Builder.effects(block: EffectsBuilder.() -> Unit): EditedMediaItem.Builder","dev.transformerkt.dsl.effects.effects"]},{"name":"fun EditedMediaItem.Builder.setEffects(block: EffectsBuilder.() -> Unit): EditedMediaItem.Builder","description":"dev.transformerkt.dsl.effects.setEffects","location":"transformerkt/dev.transformerkt.dsl.effects/set-effects.html","searchKeys":["setEffects","fun EditedMediaItem.Builder.setEffects(block: EffectsBuilder.() -> Unit): EditedMediaItem.Builder","dev.transformerkt.dsl.effects.setEffects"]},{"name":"fun EditedMediaItem.toSequence(isLooping: Boolean = false): EditedMediaItemSequence","description":"dev.transformerkt.ktx.toSequence","location":"transformerkt/dev.transformerkt.ktx/to-sequence.html","searchKeys":["toSequence","fun EditedMediaItem.toSequence(isLooping: Boolean = false): EditedMediaItemSequence","dev.transformerkt.ktx.toSequence"]},{"name":"fun EffectsBuilder.audioSampleRate(sampleRateHz: Int): EffectsBuilder","description":"dev.transformerkt.ktx.effects.audioSampleRate","location":"transformerkt/dev.transformerkt.ktx.effects/audio-sample-rate.html","searchKeys":["audioSampleRate","fun EffectsBuilder.audioSampleRate(sampleRateHz: Int): EffectsBuilder","dev.transformerkt.ktx.effects.audioSampleRate"]},{"name":"fun EffectsBuilder.bitmapOverlay(bitmap: Bitmap, block: OverlaySettings.Builder.() -> Unit): EffectsBuilder","description":"dev.transformerkt.dsl.effects.bitmapOverlay","location":"transformerkt/dev.transformerkt.dsl.effects/bitmap-overlay.html","searchKeys":["bitmapOverlay","fun EffectsBuilder.bitmapOverlay(bitmap: Bitmap, block: OverlaySettings.Builder.() -> Unit): EffectsBuilder","dev.transformerkt.dsl.effects.bitmapOverlay"]},{"name":"fun EffectsBuilder.bitmapOverlay(bitmap: Bitmap, settings: OverlaySettings? = null): EffectsBuilder","description":"dev.transformerkt.ktx.effects.bitmapOverlay","location":"transformerkt/dev.transformerkt.ktx.effects/bitmap-overlay.html","searchKeys":["bitmapOverlay","fun EffectsBuilder.bitmapOverlay(bitmap: Bitmap, settings: OverlaySettings? = null): EffectsBuilder","dev.transformerkt.ktx.effects.bitmapOverlay"]},{"name":"fun EffectsBuilder.bitmapOverlay(context: Context, drawableResId: Int, settings: OverlaySettings? = null): EffectsBuilder","description":"dev.transformerkt.ktx.effects.bitmapOverlay","location":"transformerkt/dev.transformerkt.ktx.effects/bitmap-overlay.html","searchKeys":["bitmapOverlay","fun EffectsBuilder.bitmapOverlay(context: Context, drawableResId: Int, settings: OverlaySettings? = null): EffectsBuilder","dev.transformerkt.ktx.effects.bitmapOverlay"]},{"name":"fun EffectsBuilder.bitmapOverlay(context: Context, uri: Uri, block: OverlaySettings.Builder.() -> Unit): EffectsBuilder","description":"dev.transformerkt.dsl.effects.bitmapOverlay","location":"transformerkt/dev.transformerkt.dsl.effects/bitmap-overlay.html","searchKeys":["bitmapOverlay","fun EffectsBuilder.bitmapOverlay(context: Context, uri: Uri, block: OverlaySettings.Builder.() -> Unit): EffectsBuilder","dev.transformerkt.dsl.effects.bitmapOverlay"]},{"name":"fun EffectsBuilder.bitmapOverlay(context: Context, uri: Uri, settings: OverlaySettings): EffectsBuilder","description":"dev.transformerkt.ktx.effects.bitmapOverlay","location":"transformerkt/dev.transformerkt.ktx.effects/bitmap-overlay.html","searchKeys":["bitmapOverlay","fun EffectsBuilder.bitmapOverlay(context: Context, uri: Uri, settings: OverlaySettings): EffectsBuilder","dev.transformerkt.ktx.effects.bitmapOverlay"]},{"name":"fun EffectsBuilder.brightness(brightness: Float): EffectsBuilder","description":"dev.transformerkt.ktx.effects.brightness","location":"transformerkt/dev.transformerkt.ktx.effects/brightness.html","searchKeys":["brightness","fun EffectsBuilder.brightness(brightness: Float): EffectsBuilder","dev.transformerkt.ktx.effects.brightness"]},{"name":"fun EffectsBuilder.contrast(contrast: Float): EffectsBuilder","description":"dev.transformerkt.ktx.effects.contrast","location":"transformerkt/dev.transformerkt.ktx.effects/contrast.html","searchKeys":["contrast","fun EffectsBuilder.contrast(contrast: Float): EffectsBuilder","dev.transformerkt.ktx.effects.contrast"]},{"name":"fun EffectsBuilder.drawableOverlay(drawable: Drawable, settings: OverlaySettings): EffectsBuilder","description":"dev.transformerkt.ktx.effects.drawableOverlay","location":"transformerkt/dev.transformerkt.ktx.effects/drawable-overlay.html","searchKeys":["drawableOverlay","fun EffectsBuilder.drawableOverlay(drawable: Drawable, settings: OverlaySettings): EffectsBuilder","dev.transformerkt.ktx.effects.drawableOverlay"]},{"name":"fun EffectsBuilder.overlaySettings(block: OverlaySettings.Builder.() -> Unit): OverlaySettings","description":"dev.transformerkt.dsl.effects.overlaySettings","location":"transformerkt/dev.transformerkt.dsl.effects/overlay-settings.html","searchKeys":["overlaySettings","fun EffectsBuilder.overlaySettings(block: OverlaySettings.Builder.() -> Unit): OverlaySettings","dev.transformerkt.dsl.effects.overlaySettings"]},{"name":"fun EffectsBuilder.resolution(aspectRatio: Float, scale: LayoutScale): EffectsBuilder","description":"dev.transformerkt.ktx.effects.resolution","location":"transformerkt/dev.transformerkt.ktx.effects/resolution.html","searchKeys":["resolution","fun EffectsBuilder.resolution(aspectRatio: Float, scale: LayoutScale): EffectsBuilder","dev.transformerkt.ktx.effects.resolution"]},{"name":"fun EffectsBuilder.resolution(height: Int): EffectsBuilder","description":"dev.transformerkt.ktx.effects.resolution","location":"transformerkt/dev.transformerkt.ktx.effects/resolution.html","searchKeys":["resolution","fun EffectsBuilder.resolution(height: Int): EffectsBuilder","dev.transformerkt.ktx.effects.resolution"]},{"name":"fun EffectsBuilder.resolution(width: Int, height: Int, scale: LayoutScale): EffectsBuilder","description":"dev.transformerkt.ktx.effects.resolution","location":"transformerkt/dev.transformerkt.ktx.effects/resolution.html","searchKeys":["resolution","fun EffectsBuilder.resolution(width: Int, height: Int, scale: LayoutScale): EffectsBuilder","dev.transformerkt.ktx.effects.resolution"]},{"name":"fun EffectsBuilder.speed(speed: Float): EffectsBuilder","description":"dev.transformerkt.ktx.effects.speed","location":"transformerkt/dev.transformerkt.ktx.effects/speed.html","searchKeys":["speed","fun EffectsBuilder.speed(speed: Float): EffectsBuilder","dev.transformerkt.ktx.effects.speed"]},{"name":"fun EffectsBuilder.textOverlay(spannableString: SpannableString, block: OverlaySettings.Builder.() -> Unit): EffectsBuilder","description":"dev.transformerkt.dsl.effects.textOverlay","location":"transformerkt/dev.transformerkt.dsl.effects/text-overlay.html","searchKeys":["textOverlay","fun EffectsBuilder.textOverlay(spannableString: SpannableString, block: OverlaySettings.Builder.() -> Unit): EffectsBuilder","dev.transformerkt.dsl.effects.textOverlay"]},{"name":"fun EffectsBuilder.textOverlay(text: SpannableString, settings: OverlaySettings? = null): EffectsBuilder","description":"dev.transformerkt.ktx.effects.textOverlay","location":"transformerkt/dev.transformerkt.ktx.effects/text-overlay.html","searchKeys":["textOverlay","fun EffectsBuilder.textOverlay(text: SpannableString, settings: OverlaySettings? = null): EffectsBuilder","dev.transformerkt.ktx.effects.textOverlay"]},{"name":"fun EffectsBuilder.volume(volume: Float, inputChannels: Int, outputChannels: Int = 2): EffectsBuilder","description":"dev.transformerkt.ktx.effects.volume","location":"transformerkt/dev.transformerkt.ktx.effects/volume.html","searchKeys":["volume","fun EffectsBuilder.volume(volume: Float, inputChannels: Int, outputChannels: Int = 2): EffectsBuilder","dev.transformerkt.ktx.effects.volume"]},{"name":"fun List<EditedMediaItem>.toSequence(isLooping: Boolean = false): EditedMediaItemSequence","description":"dev.transformerkt.ktx.toSequence","location":"transformerkt/dev.transformerkt.ktx/to-sequence.html","searchKeys":["toSequence","fun List<EditedMediaItem>.toSequence(isLooping: Boolean = false): EditedMediaItemSequence","dev.transformerkt.ktx.toSequence"]},{"name":"fun MediaItem.Builder.edited(block: EditedMediaItem.Builder.() -> Unit): EditedMediaItem","description":"dev.transformerkt.ktx.edited","location":"transformerkt/dev.transformerkt.ktx/edited.html","searchKeys":["edited","fun MediaItem.Builder.edited(block: EditedMediaItem.Builder.() -> Unit): EditedMediaItem","dev.transformerkt.ktx.edited"]},{"name":"fun MediaItem.Builder.setClippingConfiguration(startMs: Long, endMs: Long): MediaItem.Builder","description":"dev.transformerkt.ktx.setClippingConfiguration","location":"transformerkt/dev.transformerkt.ktx/set-clipping-configuration.html","searchKeys":["setClippingConfiguration","fun MediaItem.Builder.setClippingConfiguration(startMs: Long, endMs: Long): MediaItem.Builder","dev.transformerkt.ktx.setClippingConfiguration"]},{"name":"fun MediaItem.asEdited(block: EditedMediaItem.Builder.() -> Unit = {}): EditedMediaItem","description":"dev.transformerkt.ktx.asEdited","location":"transformerkt/dev.transformerkt.ktx/as-edited.html","searchKeys":["asEdited","fun MediaItem.asEdited(block: EditedMediaItem.Builder.() -> Unit = {}): EditedMediaItem","dev.transformerkt.ktx.asEdited"]},{"name":"fun MediaItem.buildWith(block: MediaItem.Builder.() -> Unit): MediaItem","description":"dev.transformerkt.ktx.buildWith","location":"transformerkt/dev.transformerkt.ktx/build-with.html","searchKeys":["buildWith","fun MediaItem.buildWith(block: MediaItem.Builder.() -> Unit): MediaItem","dev.transformerkt.ktx.buildWith"]},{"name":"fun MediaItem.edited(block: EditedMediaItem.Builder.() -> Unit): EditedMediaItem","description":"dev.transformerkt.ktx.edited","location":"transformerkt/dev.transformerkt.ktx/edited.html","searchKeys":["edited","fun MediaItem.edited(block: EditedMediaItem.Builder.() -> Unit): EditedMediaItem","dev.transformerkt.ktx.edited"]},{"name":"fun MediaItem.withEffects(block: EffectsBuilder.() -> Unit): EditedMediaItem","description":"dev.transformerkt.dsl.effects.withEffects","location":"transformerkt/dev.transformerkt.dsl.effects/with-effects.html","searchKeys":["withEffects","fun MediaItem.withEffects(block: EffectsBuilder.() -> Unit): EditedMediaItem","dev.transformerkt.dsl.effects.withEffects"]},{"name":"fun TransformationRequest.buildWith(block: TransformationRequest.Builder.() -> Unit): TransformationRequest","description":"dev.transformerkt.ktx.buildWith","location":"transformerkt/dev.transformerkt.ktx/build-with.html","searchKeys":["buildWith","fun TransformationRequest.buildWith(block: TransformationRequest.Builder.() -> Unit): TransformationRequest","dev.transformerkt.ktx.buildWith"]},{"name":"fun Transformer.Builder.buildWith(block: Transformer.Builder.() -> Unit): Transformer","description":"dev.transformerkt.ktx.buildWith","location":"transformerkt/dev.transformerkt.ktx/build-with.html","searchKeys":["buildWith","fun Transformer.Builder.buildWith(block: Transformer.Builder.() -> Unit): Transformer","dev.transformerkt.ktx.buildWith"]},{"name":"fun Transformer.buildWith(block: Transformer.Builder.() -> Unit): Transformer","description":"dev.transformerkt.ktx.buildWith","location":"transformerkt/dev.transformerkt.ktx/build-with.html","searchKeys":["buildWith","fun Transformer.buildWith(block: Transformer.Builder.() -> Unit): Transformer","dev.transformerkt.ktx.buildWith"]},{"name":"fun Transformer.imageToVideo(input: File, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","fun Transformer.imageToVideo(input: File, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"fun Transformer.imageToVideo(input: File, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","fun Transformer.imageToVideo(input: File, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"fun Transformer.imageToVideo(input: Uri, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","fun Transformer.imageToVideo(input: Uri, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"fun Transformer.imageToVideo(input: Uri, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","fun Transformer.imageToVideo(input: Uri, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"fun Transformer.start(input: Composition, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: Composition, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: Composition, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: Composition, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: EditedMediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: EditedMediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: EditedMediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: EditedMediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: File, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: File, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: File, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: File, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: MediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: MediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: MediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: MediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: Uri, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: Uri, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun Transformer.start(input: Uri, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","fun Transformer.start(input: Uri, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS): Flow<TransformerStatus>","dev.transformerkt.ktx.inputs.start"]},{"name":"fun audioSampleRateEffect(sampleRateHz: Int): AudioProcessor","description":"dev.transformerkt.ktx.effects.audioSampleRateEffect","location":"transformerkt/dev.transformerkt.ktx.effects/audio-sample-rate-effect.html","searchKeys":["audioSampleRateEffect","fun audioSampleRateEffect(sampleRateHz: Int): AudioProcessor","dev.transformerkt.ktx.effects.audioSampleRateEffect"]},{"name":"fun bitmapOverlayEffect(bitmap: Bitmap, settings: OverlaySettings? = null): OverlayEffect","description":"dev.transformerkt.ktx.effects.bitmapOverlayEffect","location":"transformerkt/dev.transformerkt.ktx.effects/bitmap-overlay-effect.html","searchKeys":["bitmapOverlayEffect","fun bitmapOverlayEffect(bitmap: Bitmap, settings: OverlaySettings? = null): OverlayEffect","dev.transformerkt.ktx.effects.bitmapOverlayEffect"]},{"name":"fun bitmapOverlayEffect(context: Context, drawableResId: Int, settings: OverlaySettings? = null): OverlayEffect","description":"dev.transformerkt.ktx.effects.bitmapOverlayEffect","location":"transformerkt/dev.transformerkt.ktx.effects/bitmap-overlay-effect.html","searchKeys":["bitmapOverlayEffect","fun bitmapOverlayEffect(context: Context, drawableResId: Int, settings: OverlaySettings? = null): OverlayEffect","dev.transformerkt.ktx.effects.bitmapOverlayEffect"]},{"name":"fun bitmapOverlayEffect(context: Context, uri: Uri, settings: OverlaySettings): OverlayEffect","description":"dev.transformerkt.ktx.effects.bitmapOverlayEffect","location":"transformerkt/dev.transformerkt.ktx.effects/bitmap-overlay-effect.html","searchKeys":["bitmapOverlayEffect","fun bitmapOverlayEffect(context: Context, uri: Uri, settings: OverlaySettings): OverlayEffect","dev.transformerkt.ktx.effects.bitmapOverlayEffect"]},{"name":"fun build(context: Context, block: Transformer.Builder.() -> Unit = {}): Transformer","description":"dev.transformerkt.TransformerKt.build","location":"transformerkt/dev.transformerkt/-transformer-kt/build.html","searchKeys":["build","fun build(context: Context, block: Transformer.Builder.() -> Unit = {}): Transformer","dev.transformerkt.TransformerKt.build"]},{"name":"fun buildEffects(block: EffectsBuilder.() -> Unit): Effects","description":"dev.transformerkt.dsl.effects.buildEffects","location":"transformerkt/dev.transformerkt.dsl.effects/build-effects.html","searchKeys":["buildEffects","fun buildEffects(block: EffectsBuilder.() -> Unit): Effects","dev.transformerkt.dsl.effects.buildEffects"]},{"name":"fun composition(sequence: EditedMediaItemSequence, block: Composition.Builder.() -> Unit): Composition","description":"dev.transformerkt.ktx.composition","location":"transformerkt/dev.transformerkt.ktx/composition.html","searchKeys":["composition","fun composition(sequence: EditedMediaItemSequence, block: Composition.Builder.() -> Unit): Composition","dev.transformerkt.ktx.composition"]},{"name":"fun composition(sequences: List<EditedMediaItemSequence>, block: Composition.Builder.() -> Unit): Composition","description":"dev.transformerkt.ktx.composition","location":"transformerkt/dev.transformerkt.ktx/composition.html","searchKeys":["composition","fun composition(sequences: List<EditedMediaItemSequence>, block: Composition.Builder.() -> Unit): Composition","dev.transformerkt.ktx.composition"]},{"name":"fun composition(vararg sequences: EditedMediaItemSequence?, block: Composition.Builder.() -> Unit): Composition","description":"dev.transformerkt.ktx.composition","location":"transformerkt/dev.transformerkt.ktx/composition.html","searchKeys":["composition","fun composition(vararg sequences: EditedMediaItemSequence?, block: Composition.Builder.() -> Unit): Composition","dev.transformerkt.ktx.composition"]},{"name":"fun compositionOf(block: CompositionBuilder.() -> Unit): Composition","description":"dev.transformerkt.dsl.composition.compositionOf","location":"transformerkt/dev.transformerkt.dsl.composition/composition-of.html","searchKeys":["compositionOf","fun compositionOf(block: CompositionBuilder.() -> Unit): Composition","dev.transformerkt.dsl.composition.compositionOf"]},{"name":"fun drawableOverlayEffect(drawable: Drawable, settings: OverlaySettings): OverlayEffect","description":"dev.transformerkt.ktx.effects.drawableOverlayEffect","location":"transformerkt/dev.transformerkt.ktx.effects/drawable-overlay-effect.html","searchKeys":["drawableOverlayEffect","fun drawableOverlayEffect(drawable: Drawable, settings: OverlaySettings): OverlayEffect","dev.transformerkt.ktx.effects.drawableOverlayEffect"]},{"name":"fun files(files: List<File>, configure: MediaItem.Builder.(File) -> Unit = {}, block: EditedMediaItem.Builder.(File) -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.files","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/files.html","searchKeys":["files","fun files(files: List<File>, configure: MediaItem.Builder.(File) -> Unit = {}, block: EditedMediaItem.Builder.(File) -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.files"]},{"name":"fun image(file: File, durationMs: Long, frameRate: Int = 30, block: EffectsBuilder.() -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.image","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/image.html","searchKeys":["image","fun image(file: File, durationMs: Long, frameRate: Int = 30, block: EffectsBuilder.() -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.image"]},{"name":"fun image(uri: Uri, durationMs: Long, frameRate: Int = 30, block: EffectsBuilder.() -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.image","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/image.html","searchKeys":["image","fun image(uri: Uri, durationMs: Long, frameRate: Int = 30, block: EffectsBuilder.() -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.image"]},{"name":"fun item(item: File, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.item","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/item.html","searchKeys":["item","fun item(item: File, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.item"]},{"name":"fun item(item: Uri, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.item","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/item.html","searchKeys":["item","fun item(item: Uri, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.item"]},{"name":"fun item(mediaItem: MediaItem, block: EditedMediaItem.Builder.() -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.item","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/item.html","searchKeys":["item","fun item(mediaItem: MediaItem, block: EditedMediaItem.Builder.() -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.item"]},{"name":"fun items(uris: List<Uri>, configure: MediaItem.Builder.(Uri) -> Unit = {}, block: EditedMediaItem.Builder.(Uri) -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.items","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/items.html","searchKeys":["items","fun items(uris: List<Uri>, configure: MediaItem.Builder.(Uri) -> Unit = {}, block: EditedMediaItem.Builder.(Uri) -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.items"]},{"name":"fun mediaItems(mediaItems: List<MediaItem>, block: EditedMediaItem.Builder.(MediaItem) -> Unit = {}): SequenceBuilder","description":"dev.transformerkt.dsl.composition.SequenceBuilder.mediaItems","location":"transformerkt/dev.transformerkt.dsl.composition/-sequence-builder/media-items.html","searchKeys":["mediaItems","fun mediaItems(mediaItems: List<MediaItem>, block: EditedMediaItem.Builder.(MediaItem) -> Unit = {}): SequenceBuilder","dev.transformerkt.dsl.composition.SequenceBuilder.mediaItems"]},{"name":"fun resolutionEffect(aspectRatio: Float, scale: LayoutScale): Presentation","description":"dev.transformerkt.ktx.effects.resolutionEffect","location":"transformerkt/dev.transformerkt.ktx.effects/resolution-effect.html","searchKeys":["resolutionEffect","fun resolutionEffect(aspectRatio: Float, scale: LayoutScale): Presentation","dev.transformerkt.ktx.effects.resolutionEffect"]},{"name":"fun resolutionEffect(height: Int): Presentation","description":"dev.transformerkt.ktx.effects.resolutionEffect","location":"transformerkt/dev.transformerkt.ktx.effects/resolution-effect.html","searchKeys":["resolutionEffect","fun resolutionEffect(height: Int): Presentation","dev.transformerkt.ktx.effects.resolutionEffect"]},{"name":"fun resolutionEffect(width: Int, height: Int, scale: LayoutScale): Presentation","description":"dev.transformerkt.ktx.effects.resolutionEffect","location":"transformerkt/dev.transformerkt.ktx.effects/resolution-effect.html","searchKeys":["resolutionEffect","fun resolutionEffect(width: Int, height: Int, scale: LayoutScale): Presentation","dev.transformerkt.ktx.effects.resolutionEffect"]},{"name":"fun textOverlayEffect(text: SpannableString, settings: OverlaySettings? = null): OverlayEffect","description":"dev.transformerkt.ktx.effects.textOverlayEffect","location":"transformerkt/dev.transformerkt.ktx.effects/text-overlay-effect.html","searchKeys":["textOverlayEffect","fun textOverlayEffect(text: SpannableString, settings: OverlaySettings? = null): OverlayEffect","dev.transformerkt.ktx.effects.textOverlayEffect"]},{"name":"fun volumeEffect(volume: Float, inputChannels: Int, outputChannels: Int = 2): AudioProcessor","description":"dev.transformerkt.ktx.effects.volumeEffect","location":"transformerkt/dev.transformerkt.ktx.effects/volume-effect.html","searchKeys":["volumeEffect","fun volumeEffect(volume: Float, inputChannels: Int, outputChannels: Int = 2): AudioProcessor","dev.transformerkt.ktx.effects.volumeEffect"]},{"name":"inline fun buildSpannableString(builderAction: SpannableStringBuilder.() -> Unit): SpannableString","description":"dev.transformerkt.ktx.effects.buildSpannableString","location":"transformerkt/dev.transformerkt.ktx.effects/build-spannable-string.html","searchKeys":["buildSpannableString","inline fun buildSpannableString(builderAction: SpannableStringBuilder.() -> Unit): SpannableString","dev.transformerkt.ktx.effects.buildSpannableString"]},{"name":"interface CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/index.html","searchKeys":["CompositionBuilder","interface CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder"]},{"name":"interface EffectsBuilder","description":"dev.transformerkt.dsl.effects.EffectsBuilder","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/index.html","searchKeys":["EffectsBuilder","interface EffectsBuilder","dev.transformerkt.dsl.effects.EffectsBuilder"]},{"name":"interface Finished : TransformerStatus","description":"dev.transformerkt.TransformerStatus.Finished","location":"transformerkt/dev.transformerkt/-transformer-status/-finished/index.html","searchKeys":["Finished","interface Finished : TransformerStatus","dev.transformerkt.TransformerStatus.Finished"]},{"name":"interface TransformerStatus","description":"dev.transformerkt.TransformerStatus","location":"transformerkt/dev.transformerkt/-transformer-status/index.html","searchKeys":["TransformerStatus","interface TransformerStatus","dev.transformerkt.TransformerStatus"]},{"name":"object TransformerKt","description":"dev.transformerkt.TransformerKt","location":"transformerkt/dev.transformerkt/-transformer-kt/index.html","searchKeys":["TransformerKt","object TransformerKt","dev.transformerkt.TransformerKt"]},{"name":"open fun add(file: File, isLooping: Boolean = false, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder.add","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/add.html","searchKeys":["add","open fun add(file: File, isLooping: Boolean = false, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder.add"]},{"name":"open fun add(mediaItem: MediaItem, isLooping: Boolean = false, block: EditedMediaItem.Builder.() -> Unit = {}): CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder.add","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/add.html","searchKeys":["add","open fun add(mediaItem: MediaItem, isLooping: Boolean = false, block: EditedMediaItem.Builder.() -> Unit = {}): CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder.add"]},{"name":"open fun add(uri: Uri, isLooping: Boolean = false, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): CompositionBuilder","description":"dev.transformerkt.dsl.composition.CompositionBuilder.add","location":"transformerkt/dev.transformerkt.dsl.composition/-composition-builder/add.html","searchKeys":["add","open fun add(uri: Uri, isLooping: Boolean = false, configure: MediaItem.Builder.() -> Unit = {}, block: EditedMediaItem.Builder.() -> Unit = {}): CompositionBuilder","dev.transformerkt.dsl.composition.CompositionBuilder.add"]},{"name":"open fun audio(vararg processors: AudioProcessor): EffectsBuilder","description":"dev.transformerkt.dsl.effects.EffectsBuilder.audio","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/audio.html","searchKeys":["audio","open fun audio(vararg processors: AudioProcessor): EffectsBuilder","dev.transformerkt.dsl.effects.EffectsBuilder.audio"]},{"name":"open fun video(vararg effects: Effect): EffectsBuilder","description":"dev.transformerkt.dsl.effects.EffectsBuilder.video","location":"transformerkt/dev.transformerkt.dsl.effects/-effects-builder/video.html","searchKeys":["video","open fun video(vararg effects: Effect): EffectsBuilder","dev.transformerkt.dsl.effects.EffectsBuilder.video"]},{"name":"operator fun AudioProcessor.plus(processor: AudioProcessor): List<AudioProcessor>","description":"dev.transformerkt.dsl.effects.plus","location":"transformerkt/dev.transformerkt.dsl.effects/plus.html","searchKeys":["plus","operator fun AudioProcessor.plus(processor: AudioProcessor): List<AudioProcessor>","dev.transformerkt.dsl.effects.plus"]},{"name":"operator fun EditedMediaItem.plus(other: EditedMediaItem): EditedMediaItemSequence","description":"dev.transformerkt.ktx.plus","location":"transformerkt/dev.transformerkt.ktx/plus.html","searchKeys":["plus","operator fun EditedMediaItem.plus(other: EditedMediaItem): EditedMediaItemSequence","dev.transformerkt.ktx.plus"]},{"name":"operator fun EditedMediaItemSequence.plus(other: EditedMediaItem): EditedMediaItemSequence","description":"dev.transformerkt.ktx.plus","location":"transformerkt/dev.transformerkt.ktx/plus.html","searchKeys":["plus","operator fun EditedMediaItemSequence.plus(other: EditedMediaItem): EditedMediaItemSequence","dev.transformerkt.ktx.plus"]},{"name":"operator fun Effect.plus(effect: Effect): List<Effect>","description":"dev.transformerkt.dsl.effects.plus","location":"transformerkt/dev.transformerkt.dsl.effects/plus.html","searchKeys":["plus","operator fun Effect.plus(effect: Effect): List<Effect>","dev.transformerkt.dsl.effects.plus"]},{"name":"sealed class LayoutScale","description":"dev.transformerkt.ktx.effects.LayoutScale","location":"transformerkt/dev.transformerkt.ktx.effects/-layout-scale/index.html","searchKeys":["LayoutScale","sealed class LayoutScale","dev.transformerkt.ktx.effects.LayoutScale"]},{"name":"suspend fun Transformer.imageToVideo(input: File, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","suspend fun Transformer.imageToVideo(input: File, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"suspend fun Transformer.imageToVideo(input: File, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","suspend fun Transformer.imageToVideo(input: File, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"suspend fun Transformer.imageToVideo(input: Uri, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","suspend fun Transformer.imageToVideo(input: Uri, output: File, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"suspend fun Transformer.imageToVideo(input: Uri, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.imageToVideo","location":"transformerkt/dev.transformerkt.ktx.inputs/image-to-video.html","searchKeys":["imageToVideo","suspend fun Transformer.imageToVideo(input: Uri, output: File, request: TransformationRequest, durationMs: Long, frameRate: Int = 30, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, effectsBlock: EffectsBuilder.() -> Unit = {}, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.imageToVideo"]},{"name":"suspend fun Transformer.start(input: Composition, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: Composition, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: Composition, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: Composition, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: EditedMediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: EditedMediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: EditedMediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: EditedMediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: File, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: File, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: File, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: File, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: MediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: MediaItem, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: MediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: MediaItem, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: Uri, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: Uri, output: File, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"suspend fun Transformer.start(input: Uri, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","description":"dev.transformerkt.ktx.inputs.start","location":"transformerkt/dev.transformerkt.ktx.inputs/start.html","searchKeys":["start","suspend fun Transformer.start(input: Uri, output: File, request: TransformationRequest, progressPollDelayMs: Long = TransformerKt.DEFAULT_PROGRESS_POLL_DELAY_MS, onProgress: (Int) -> Unit = {}): TransformerStatus.Finished","dev.transformerkt.ktx.inputs.start"]},{"name":"val DefaultRequest: TransformationRequest","description":"dev.transformerkt.TransformerKt.DefaultRequest","location":"transformerkt/dev.transformerkt/-transformer-kt/-default-request.html","searchKeys":["DefaultRequest","val DefaultRequest: TransformationRequest","dev.transformerkt.TransformerKt.DefaultRequest"]},{"name":"val H264AndAacRequest: TransformationRequest","description":"dev.transformerkt.TransformerKt.H264AndAacRequest","location":"transformerkt/dev.transformerkt/-transformer-kt/-h264-and-aac-request.html","searchKeys":["H264AndAacRequest","val H264AndAacRequest: TransformationRequest","dev.transformerkt.TransformerKt.H264AndAacRequest"]},{"name":"val H264Request: TransformationRequest","description":"dev.transformerkt.TransformerKt.H264Request","location":"transformerkt/dev.transformerkt/-transformer-kt/-h264-request.html","searchKeys":["H264Request","val H264Request: TransformationRequest","dev.transformerkt.TransformerKt.H264Request"]},{"name":"val InferRequest: TransformationRequest","description":"dev.transformerkt.TransformerKt.InferRequest","location":"transformerkt/dev.transformerkt/-transformer-kt/-infer-request.html","searchKeys":["InferRequest","val InferRequest: TransformationRequest","dev.transformerkt.TransformerKt.InferRequest"]},{"name":"val cause: Throwable","description":"dev.transformerkt.TransformerStatus.Failure.cause","location":"transformerkt/dev.transformerkt/-transformer-status/-failure/cause.html","searchKeys":["cause","val cause: Throwable","dev.transformerkt.TransformerStatus.Failure.cause"]},{"name":"val exportResult: ExportResult","description":"dev.transformerkt.TransformerStatus.Success.exportResult","location":"transformerkt/dev.transformerkt/-transformer-status/-success/export-result.html","searchKeys":["exportResult","val exportResult: ExportResult","dev.transformerkt.TransformerStatus.Success.exportResult"]},{"name":"val output: File","description":"dev.transformerkt.TransformerStatus.Success.output","location":"transformerkt/dev.transformerkt/-transformer-status/-success/output.html","searchKeys":["output","val output: File","dev.transformerkt.TransformerStatus.Success.output"]},{"name":"val progress: Int","description":"dev.transformerkt.TransformerStatus.Progress.progress","location":"transformerkt/dev.transformerkt/-transformer-status/-progress/progress.html","searchKeys":["progress","val progress: Int","dev.transformerkt.TransformerStatus.Progress.progress"]}]
